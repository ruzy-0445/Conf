# NGINX主設定檔

# 設定運行服務進程的使用者與群組
# 預設： nobody nobody
user www www;

# 設定要執行的服務進程數量
# 預設：CPU核心數
worker_processes auto;

# 設定 error log 路徑與紀錄冗餘層級(debug info notice warn error crit alert emerg)
# 預設值：logs/error.log error
# 備註： debug 冗餘層級需要於軟體建構時期使用 --with-debug configure 參數啟用才能使用
error_log logs/error.log error;

# 設定主進程識別編號(PID)檔的保存路徑
# 預設值：logs/nginx.pid
pid pid/nginx.pid;

# 設定服務進程的最大開檔限制(RLIMIT_NOFILE)
# 此數值應大於或等於 worker_connections 設定值
# 預設值：同作業系統限制
worker_rlimit_nofile 65535;

# 啟用正規表達式的JIT編譯，可以大幅改善處理正規表達式的效能
# 預設值：off
pcre_jit on;

# 與連線的處理有關的設定
events {
    # 每個服務進程所能處理的連線數上限
    # Nginx整體能同時服務的連線數上限為「服務進程數(worker_processes) × 每服務進程連線數上限(worker_connections)」
    # 預設值：512
    # 非營運服務器：1k
    # 營運服務器：10k 或更多
    # 此數值應小於或等於 worker_rlimit_nofile 設定值
    worker_connections 51200;

    # 是否允許一Nginx服務進程接受多個連線
    # 預設值：off（同一時間一Nginx服務進程只接受一個連線）
    multi_accept on;
}

# 與處理 HTTP 連線（Web服務器、HTTP(S)反向代理服務）有關的設定
http {
    include conf.d/media-type-and-charset.conf;
    include conf.d/data-io.conf;
    include conf.d/gzip-compression.conf;
    include conf.d/tcp-connection.conf;
    include conf.d/realip.conf;
    include conf.d/security.conf;

    # 運行紀錄檔的格式設定
    # 預設值：Nginx 預設的 combined 日誌格式：
    #     '$remote_addr - $remote_user [$time_local] '
    #     '"$request" $status $body_bytes_sent '
    #     '"$http_referer" "$http_user_agent"';
    # 另可使用 drop-in 目錄中的自訂格式設定：
    include conf.d/access-log-formats.conf;
    #下列格式：客戶端位址、客戶端名稱、本地紀錄時間、請求的URI和HTTP協議方式、狀態碼、發送給客戶端文件大小、URL跳轉來源、客戶端瀏覽器信息、反向客戶端位址
    log_format main
        '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent"'
        '"$http_x_forwarded_for"';

    # 指定預設的站台存取日誌路徑以及日誌格式
    # 預設值：logs/access.log combined
    access_log logs/access.log main;

    # 指定最大允許的客戶端請求本體(body)大小
    # 會影響到客戶端能夠上傳的檔案的大小
    # 默認值：1m
    client_max_body_size 1m;
    #指定客戶端請求本體的緩衝區大小，默認值:8k、16k
    client_body_buffer_size 1024k;
    #指定讀取客戶端請求標頭的緩衝區大小，默認值:1k
    client_header_buffer_size 1k;
    
    #fastcgi錯誤轉處理模式，默認值為off，若開啟，必須在nginx有設定 error_page 的時候才有作用，默认情况下，nginx不支持自定义404错误页面，只有这个指令被设置为on，nginx才支持将404错误重定向。
    fastcgi_intercept_errors on;
    #指定連接到後端fastCGI的超時時間
    fastcgi_connect_timeout 300;
    #向fastCGI傳送請求的超時時間，這個值是指已经完成兩次握手後向fastCGI傳送請求的超時時間
    fastcgi_send_timeout 300;
    #接收fastCGI響應的超時時間，這個值已经完成兩次握手後接收fastCGI響應的超時時間
    fastcgi_read_timeout 300;
    #指定讀取fastCGI響應第一部分需要用多大的緩衝區，一般第一部分響應不會超過1k，一般設置為64k
    fastcgi_buffer_size 128k;
    #指定本地需要用多少個和每個是多大的緩衝區來緩衝fastCGI的應答
    fastcgi_buffers 8 128k;
    #設定系统很忙時可以使用的fastcgi_buffers大小，建議大小為fastcgi_buffers的两倍
    fastcgi_busy_buffers_size 256k;
    #在寫入fastcgi_temp_path時將用多大的數據塊，默認值是fastcgi_buffers的兩倍。該數值設置小時若負載上來時可能報502 Bad Gateway。可設置128-256K
    fastcgi_temp_file_write_size 256k;
    ##設置頭部哈希表的最大值，不能小於後端服務器設置的標頭總數
    proxy_headers_hash_max_size 2048;
    #設置標頭哈希表大小
    proxy_headers_hash_bucket_size 256;
    #用於指定DNS伺服器地址, 需配合使用此配置主要是因為OCSP查詢地址ocsp.int-x3.letsencrypt.org需要解析為IP地址，根據Nginx文件，最好使用本地DNS服務，可以防止DNS欺騙(DNS spoofing)。
    resolver 127.0.0.1 valid=300s;
    
    #geot和map兩段用於處理限速名單，map段對映名單到$req_limit，處於geo內的IP將被對映為空值，否則為其IP地址。limit_conn_zone和limit_req_zone指令對於鍵為空值的將會被忽略，從而實現對於列出來的IP不做限制
    geo $writeiplist {
        default 1;
        127.0.0.1 0;
    }
    map $writeiplist $req_limit {
        1 $binary_remote_addr;
        0 "";
    }
    
    #引用請求與訪問限制
    include vhost/limit.conf;
    
    #配置從80 port進來的請求，主機(網域)名不符合(即使用IP)時回傳444
    server {
        listen 80;
        server_name _;
        return 444;
    }
    #配置從443 port進來的請求時回傳444    
    server {
        listen 443 ssl http2;
        include vhost/ssl.conf;
        return 444;
    }
    
    #配置本機查詢nginx統計數據，指定只可透過本機的89 port查詢，開啟統計數據與狀態，並關閉日誌紀錄
    server {
        listen 127.0.0.1:89;
        location = /NginxStatus {
            stub_status on;
            access_log off;
        }
        #配置查詢PHP統計數據，建議有連結php-fpm時再開啟使用
        #location = /php-status {
        #    access_log off;
        #    fastcgi_pass PHP所在IP:9000;
        #    fastcgi_index index.php;
        #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #    include fastcgi_params;
        #}        
    }
    #配置查詢nginx詳細統計數據圖表(透過第三方vts模組)，指定只可透過本機的90 port查詢
    vhost_traffic_status_zone;
    server {
        listen 127.0.0.1:90;
        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
            access_log off;
        }
    }
    include vhost/web.conf;
    include vhost/7layer.conf;
    include conf.d/geoip2.conf;
}
include stream/4layer.conf;

