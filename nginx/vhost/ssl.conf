##SSL 基本配置
#SSL 證書位置
ssl_certificate sslkeys/self-signed.crt;
#SSL 密鑰位置
ssl_certificate_key sslkeys/self-signed.key;
#受信任的CA證書-PEM證書位置
#ssl_trusted_certificate sslkeys/chain.pem;
#PEM證書訊息
#ssl_dhparam sslkeys/dhparams.pem;
#SSL session 建立後的超時時間
ssl_session_timeout 1d;
#SSL快取緩存功能，設定值為off或者none這兩種情况下是不會啟用ssl的session缓存功能的；
#而built_in配置ssl_session缓存，則會使用openssl内部的session cache機制；
#shared方式使用的ssl session cache使用的是nginx ssl模塊提供的共享内存形式的缓存，这种session缓存能夠被nginx所有的worker進程進行共享訪問，shared模式下可提供session cache大小的閥值設置，cache淘汰過期的方式為簡單的LRU（least recently used)方式進行淘汰(即近期最不會訪問的資料給淘汰掉)
ssl_session_cache shared:SSL:50m;
#用來配置瀏覽器的 Session Ticket 快取，當我們在Nginx的一個http{}裏面配置多個 https 的站點的時候，如果有一個站點開啟了ssl_session_tickets，那麼瀏覽器的就會快取Session Ticket，然後在下一個請求使用當前的Session Ticket，提升效能；而在同一http{}下有其他站點的時候，無論是否設定了 ssl_session_tickets 了，那麼都會導致瀏覽器複用前一個的Session Ticket。
#配置不好會導致SSL證書衝突問題，會顯示無法提供安全連線，所以如果站台配置都在同一個http{}下，那可以關閉ssl_session_tickets；如果是建立多在http{}，各http{}可分別開啟ssl_session_tickets
ssl_session_tickets off;
#SSL要使用哪些協議，如果不設置支持的協議版本，默認使用的範圍是TLSv1、TLSv1.1、TLSv1.2
ssl_protocols TLSv1.2 TLSv1.3;
#設置openssl所使用的加密算法套件，允許所列的演算法產出的憑證 
ssl_ciphers ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:HIGH:!NULL:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!ADH:!RC4;
#設置協商加密算法時，優先使用我們服務端的加密套件，而不是客户端瀏覽器的加密套件。
ssl_prefer_server_ciphers on;

#下列是用於OCSP Stapling (線上證書狀態協議閉合)，伺服器在TLS握手時發送事先緩存的OCSP響應，用戶只需驗證該響應的有效性而不用再向數字證書認證機構（CA）發送請求
#建議如要使用，證書需是正式而非自簽的，不然在進行nginx -t檢測時會報錯，但不影響啟動
#開啟stabling功能，缓存訪問得到的證書信息，减少OCSP的驗證，提高SSL處理的效率
#ssl_stapling on;
#对stapling缓存的證書信息進行驗證，默認值為不開啟
#ssl_stapling_verify on;
#用於指定DNS伺服器地址, 需配合使用此配置主要是因為OCSP查詢地址ocsp.int-x3.letsencrypt.org需要解析為IP地址，根據Nginx文件，最好使用本地DNS服務，可以防止DNS欺騙(DNS spoofing)。
#resolver 127.0.0.1 valid=60s;
#設定DNS解析的超時時間
#resolver_timeout 2s;
